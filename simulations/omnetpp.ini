[General]
network = Eastleigh_5GNet
sim-time-limit = 20s

#==================# NOTES #==================#
#
# For mmWave, change carrierFrequency params
# CarrierAggregation, Backgroundcell(Scheduler) and ChannelControl all have a "carrierFrequency" parameter.
#
# Bandwidth is specified by numerology & numBands; numBands is better described as numRBs.
# i.e. numerology = 0 => RB w/ 180KHz freq. slot
# and numBands = RBs = 25 => 180 KHz/RB * 25 RB = 4500 KHz ~= 5 MHz
# (as confirmed by SIMU5G collaborator in https://github.com/Unipisa/Simu5G/issues/29)
# specified in both CarrierAggregation and BackgroundCell(Scheduler), so use wildcards when specifying
#
#
#--------# Currently Requires Clarifications #--------#
# CarrierAggregation and Backgroundcell(Scheduler) have the same default (2GHz) while ChannelControl
# has a different default (2.4GHz). How are these different?
#
# Why do channel models have a parameter for component carrier index?
# * Somewhat of an explanation exists at IV B. 4) in https://ieeexplore.ieee.org/document/9211504
#
# Why do **.eNodeBTxPower and *.gnb*.txPower have different defaults?
#
# Not sure how to accomplish beamforming
#
#=============================================#

############### Cell Network ##################

*.bgCell.*.isNr = true
*.bgCell.*.carrierFrequency = 30GHz # default = 2 GHz
*.bgCell.*.numBands = default
*.bgCell.*.txPower = default
*.bgCell.*.fading_type = default # JAKES or RAYGHLEY
*.bgCell.*.scenario = default
*.bgCell.*.nodeb_height = default
*.bgCell.*.building_height = 7 # default=20, way too high for our scenario
#*.bgCell.*.numBgUes = default(0) # Background traffic?
#*.bgCell.*.antennaGainUe = default(0);
#*.bgCell.*.antennGainEnB = default(18);
#*.bgCell.*.antennGainMicro = default(5);
#*.bgCell.*.thermalNoise = default(-104.5);
#*.bgCell.*.ue_noise_figure = default(7);
#*.bgCell.*.bs_noise_figure = default(5);
#*.bgCell.*.cable_loss = default(2);

# Carrier Aggregation parameters
*.carrierAggregation.numComponentCarriers = default  # default = 1
*.carrierAggregation.componentCarrier[0].carrierFrequency = 30GHz  # default = 2 GHz
*.carrierAggregation.componentCarrier[0].numerologyIndex = default  # default = 0
*.carrierAggregation.componentCarrier[0].numBands = default  # default = 6

#*.gnb*.cellularNic.numCarriers = 1
#*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0 # i.e. channelModel 0 applies to component carrier at index 0
#*.nrUe*.cellularNic.numCarriers = 1
#*.nrUe*.cellularNic.nrChannelModel[0].componentCarrierIndex = 0

# Channel
#*.channelControl.alpha =  # Path loss coefficient
#*.channelControl.numChannels = 
#*.channelControl.carrierFrequency = 
#*.channelControl.propagationModel = 
#**.downlink_interference = true
#**.uplink_interference = true
#**.targetBler = 0.01
#**.blerShift = 5  

############### Equipment (UE/BS) ##################

# Base station parameters
**.eNodeBTxPower = default
*.gnb*.txPower = default
*.gnb*.cellularNic.channelModel[*].nodeb_height = default
*.gnb*.cellularNic.channelModel[*].building_height = 7
*.gnb*.*.channelModel[*].antennaGainEnB = default  # default = 0
*.gnb*.*.channelModel[*].antennaGainUe = default   # default = 18
*.gnb*.cellInfo.rbxDl = 7 # number of OFDM symbols per slot, DL (14?? https://www.sharetechnote.com/html/5G/image/NR_Numerology_SubCarrierSpacing_38_211_v17_6_0_01.png)
*.gnb*.cellInfo.rbxUl = 7 # number of OFDM symbols per slot, UL

# User Equipment parameters
**.ueTxPower = default
*.nrUe*.cellularNic.channelModel[*].nodeb_height = default
*.nrUe*.*.channelModel[*].building_height = 7
*.nrUe*.*.channelModel[*].antennaGainEnB = default  # default = 0
*.nrUe*.*.channelModel[*].antennaGainUe = default  # default = 18
# *.nrUe*.mobility.typename = "" # If moving UE is desirable. Default is stationary

# UEs associates to the best BS at the beginning of the simulation
*.nrUe*.macCellId = 0
*.nrUe*.masterId = 0
*.nrUe*.nrMacCellId = 1
*.nrUe*.nrMasterId = 1
**.dynamicCellAssociation = true
**.enableHandover = true

############### SCTP configuration ##################

**.sctp.nagleEnabled = false       	# if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false	# severely clutters simulation

############### Floorplan & Positioning #################

**.mobility.constraintAreaMaxX = 700m
**.mobility.constraintAreaMaxY = 700m
**.mobility.constraintAreaMaxZ = 0m

**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m

**.mobility.initFromDisplayString = true

############### X2 configuration #################

# one x2App per peering node
*.gnb0.numX2Apps = 3
*.gnb1.numX2Apps = 3
*.gnb2.numX2Apps = 3
*.gnb3.numX2Apps = 3
*.gnb4.numX2Apps = 8
*.gnb5.numX2Apps = 3
*.gnb6.numX2Apps = 3
*.gnb7.numX2Apps = 3
*.gnb8.numX2Apps = 3

*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

# gnb0 peers
*.gnb0.x2App[0].client.connectAddress = "gnb1%x2ppp1"
*.gnb0.x2App[1].client.connectAddress = "gnb4%x2ppp0"
*.gnb0.x2App[2].client.connectAddress = "gnb3%x2ppp1"

# gnb1 peers
*.gnb1.x2App[0].client.connectAddress = "gnb0%x2ppp1"
*.gnb1.x2App[1].client.connectAddress = "gnb4%x2ppp1"
*.gnb1.x2App[2].client.connectAddress = "gnb2%x2ppp1"

# gnb2 peers
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp2"
*.gnb2.x2App[1].client.connectAddress = "gnb4%x2ppp2"
*.gnb2.x2App[2].client.connectAddress = "gnb5%x2ppp1"

# gnb3 peers
*.gnb3.x2App[0].client.connectAddress = "gnb0%x2ppp2"
*.gnb3.x2App[1].client.connectAddress = "gnb4%x2ppp3"
*.gnb3.x2App[2].client.connectAddress = "gnb6%x2ppp1"

# gnb4 peers
*.gnb4.x2App[0].client.connectAddress = "gnb0%x2ppp0"
*.gnb4.x2App[1].client.connectAddress = "gnb1%x2ppp0"
*.gnb4.x2App[2].client.connectAddress = "gnb2%x2ppp0"
*.gnb4.x2App[3].client.connectAddress = "gnb3%x2ppp0"
*.gnb4.x2App[4].client.connectAddress = "gnb5%x2ppp0"
*.gnb4.x2App[5].client.connectAddress = "gnb6%x2ppp0"
*.gnb4.x2App[6].client.connectAddress = "gnb7%x2ppp0"
*.gnb4.x2App[7].client.connectAddress = "gnb8%x2ppp0"

# gnb5 peers
*.gnb5.x2App[0].client.connectAddress = "gnb2%x2ppp2"
*.gnb5.x2App[1].client.connectAddress = "gnb4%x2ppp4"
*.gnb5.x2App[2].client.connectAddress = "gnb8%x2ppp1"

# gnb6 peers
*.gnb6.x2App[0].client.connectAddress = "gnb3%x2ppp2"
*.gnb6.x2App[1].client.connectAddress = "gnb4%x2ppp5"
*.gnb6.x2App[2].client.connectAddress = "gnb7%x2ppp1"

# gnb7 peers
*.gnb7.x2App[0].client.connectAddress = "gnb6%x2ppp2"
*.gnb7.x2App[1].client.connectAddress = "gnb4%x2ppp6"
*.gnb7.x2App[2].client.connectAddress = "gnb8%x2ppp2"

# gnb8 peers
*.gnb8.x2App[0].client.connectAddress = "gnb5%x2ppp2"
*.gnb8.x2App[1].client.connectAddress = "gnb4%x2ppp7"
*.gnb8.x2App[2].client.connectAddress = "gnb7%x2ppp2"

############### Statistics #################

**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP

############### Apps #################

# one UDP application for each user
*.nrUe*.numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 5

#============= CBR Uplink =============#
[Config CBR-UL]

*.server.app[*].typename = "CbrReceiver"
*.server.app[*].localPort = 3000 + ancestorIndex(0)

*.nrUe*.app[*].typename = "CbrSender"
*.nrUe*.app[*].PacketSize = int(uniform(20, 100))
*.nrUe*.app[*].sampling_time = 0.02s
*.nrUe*.app[*].destAddress = "server" 
*.nrUe*.app[*].destPort = 3000 + ancestorIndex(0) 
*.nrUe*.app[*].localPort = 3088 + ancestorIndex(0)
*.nrUe*.app[*].startTime = uniform(0s, 0.02s)
*.nrUe*.app[*].finishTime = uniform(19.9s, 19.92s)

#============= CBR Downlink =============#
[Config CBR-DL]

*.nrUe*.app[*].typename = "CbrReceiver"
*.nrUe*.app[*].localPort = 3000

*.server.app[*].typename = "CbrSender"
*.nrUe*.app[*].PacketSize = int(uniform(20, 100))
*.server.app[*].sampling_time = 0.02s
*.server.app[*].destAddress = "nrUe" + string(ancestorIndex(0))
*.server.app[*].destPort = 3000 
*.server.app[*].localPort = 3088 + ancestorIndex(0) 
*.server.app[*].startTime = uniform(0s, 0.02s)
*.server.app[*].finishTime = uniform(19.9s, 19.92s)